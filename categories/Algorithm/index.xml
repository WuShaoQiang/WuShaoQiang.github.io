<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Gavin&#39;s Blog</title>
    <link>https://wushaoqiang.github.io/categories/Algorithm/</link>
    <description>Recent content in Algorithm on Gavin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2019 20:03:27 +0800</lastBuildDate>
    
	<atom:link href="https://wushaoqiang.github.io/categories/Algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algorithm Sort</title>
      <link>https://wushaoqiang.github.io/posts/algorithm-sort/</link>
      <pubDate>Mon, 15 Apr 2019 20:03:27 +0800</pubDate>
      
      <guid>https://wushaoqiang.github.io/posts/algorithm-sort/</guid>
      <description>排序时间复杂度 堆排序 参考dreamcatcher-cx博客
最好最坏的平均时间复杂度都为O(NlogN)
代码 func HeapSortUp(a []int) []int { for i := len(a)/2 - 1; i &amp;gt;= 0; i-- { adjustHeapUp(a, i, len(a)) } for j := len(a) - 1; j &amp;gt; 0; j-- { a[0], a[j] = a[j], a[0] adjustHeapUp(a, 0, j) } return a } func adjustHeapUp(a []int, i int, length int) { tmp := a[i] for k := 2*i + 1; k &amp;lt; length; k = 2*k + 1 { if k+1 &amp;lt; length &amp;amp;&amp;amp; a[k+1] &amp;gt; a[k] { k++ } if a[k] &amp;gt; tmp { a[i] = a[k] i = k } else { break } } a[i] = tmp }  思路  先将数组变换为一个大顶堆</description>
    </item>
    
  </channel>
</rss>