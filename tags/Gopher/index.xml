<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gopher on Gavin&#39;s Blog</title>
    <link>https://wushaoqiang.github.io/tags/Gopher/</link>
    <description>Recent content in Gopher on Gavin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2019 09:59:56 +0800</lastBuildDate>
    
	<atom:link href="https://wushaoqiang.github.io/tags/Gopher/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gopher 2019 Testing Talk</title>
      <link>https://wushaoqiang.github.io/posts/gopher/gopher-2019/</link>
      <pubDate>Mon, 13 May 2019 09:59:56 +0800</pubDate>
      
      <guid>https://wushaoqiang.github.io/posts/gopher/gopher-2019/</guid>
      <description>这篇文章来自Gopher China 2019的Dave演讲的Testing Talk
下面是一些我觉得有借鉴价值的东西
这里是如何查看一个coverage
// 生成.out文件 go test -coverprofile cover.out // 生产html文件 go tool cover -html=cover.out -o cover.html  下面是我按照Dave的建议写的一个东西
func TestFindTarget(t *testing.T) { type Input struct { node *TreeNode k int } tests := map[string]struct { input Input want bool }{ &amp;quot;Number 1&amp;quot;: { input: Input{ node: &amp;amp;TreeNode{Val: 5, Left: &amp;amp;TreeNode{Val: 3, Left: &amp;amp;TreeNode{Val: 2}, Right: &amp;amp;TreeNode{Val: 4}}, Right: &amp;amp;TreeNode{Val: 6, Right: &amp;amp;TreeNode{Val: 7}}}, k: 9, }, want: true, }, &amp;quot;Number 2&amp;quot;: { input: Input{ node: &amp;amp;TreeNode{Val: 5, Left: &amp;amp;TreeNode{Val: 3, Left: &amp;amp;TreeNode{Val: 2}, Right: &amp;amp;TreeNode{Val: 4}}, Right: &amp;amp;TreeNode{Val: 6, Right: &amp;amp;TreeNode{Val: 7}}}, k: 28, }, want: false, }, } for name, tc := range tests { t.</description>
    </item>
    
  </channel>
</rss>